package cn.chain33.javasdk.model;

import org.junit.Test;

import com.alibaba.fastjson.JSONArray;

import cn.chain33.javasdk.client.Account;
import cn.chain33.javasdk.client.RpcClient;
import cn.chain33.javasdk.model.enums.SignType;
import cn.chain33.javasdk.model.rpcresult.QueryTransactionResult;
import cn.chain33.javasdk.utils.EvmUtil;
import cn.chain33.javasdk.utils.HexUtil;
import cn.chain33.javasdk.utils.TransactionUtil;

public class ERC1155Test {
	
	RpcClient client = new RpcClient("119.3.154.140", 8801);

	Account account = new Account();
	
	
	/**
	 * 3.5.3 智能合约更新
	 * @throws Exception 
	 */
	 @Test
	 public void Case3_5_3() throws Exception {
    	
    	// 部署合约对应的私钥
        String privateKey = "3990969DF92A5914F7B71EEB9A4E58D6E255F32BF042FEA5318FC8B3D50EE6E8";
        
        // 对应代码：ERC1155.sol 
        String code = "60806040523480156200001157600080fd5b506040805160208101909152600081526200002c8162000038565b50600060035562000134565b80516200004d90600290602084019062000051565b5050565b8280546200005f90620000f7565b90600052602060002090601f016020900481019282620000835760008555620000ce565b82601f106200009e57805160ff1916838001178555620000ce565b82800160010185558215620000ce579182015b82811115620000ce578251825591602001919060010190620000b1565b50620000dc929150620000e0565b5090565b5b80821115620000dc5760008155600101620000e1565b6002810460018216806200010c57607f821691505b602082108114156200012e57634e487b7160e01b600052602260045260246000fd5b50919050565b61167680620001446000396000f3fe608060405234801561001057600080fd5b506004361061009d5760003560e01c80634e1273f4116100665780634e1273f414610133578063a22cb46514610153578063e985e9c514610166578063f242432a14610179578063f55267741461018c5761009d565b8062fdd58e146100a257806301ffc9a7146100cb5780630e89341c146100eb5780631ea350d31461010b5780632eb2c2d614610120575b600080fd5b6100b56100b0366004610e8c565b610194565b6040516100c2919061147d565b60405180910390f35b6100de6100d9366004610f73565b6101eb565b6040516100c29190611133565b6100fe6100f9366004610fb2565b610233565b6040516100c2919061113e565b61011e610119366004610fb2565b6102c7565b005b61011e61012e366004610d49565b610302565b610146610141366004610eb5565b610360565b6040516100c291906110f2565b61011e610161366004610e52565b610480565b6100de610174366004610d17565b61054e565b61011e610187366004610def565b61057c565b6100b56105d3565b60006001600160a01b0383166101c55760405162461bcd60e51b81526004016101bc906111ed565b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061021c57506001600160e01b031982166303a24d0760e21b145b8061022b575061022b826105d9565b90505b919050565b606060028054610242906114fa565b80601f016020809104026020016040519081016040528092919081815260200182805461026e906114fa565b80156102bb5780601f10610290576101008083540402835291602001916102bb565b820191906000526020600020905b81548152906001019060200180831161029e57829003601f168201915b50505050509050919050565b600380549060006102d783611535565b9190505550600060035490506102fe338284604051806020016040528060008152506105f2565b5050565b61030a6106e1565b6001600160a01b0316856001600160a01b031614806103305750610330856101746106e1565b61034c5760405162461bcd60e51b81526004016101bc906112c6565b61035985858585856106e6565b5050505050565b606081518351146103835760405162461bcd60e51b81526004016101bc906113ab565b6000835167ffffffffffffffff8111156103ad57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156103d6578160200160208202803683370190505b50905060005b84518110156104785761043d85828151811061040857634e487b7160e01b600052603260045260246000fd5b602002602001015185838151811061043057634e487b7160e01b600052603260045260246000fd5b6020026020010151610194565b82828151811061045d57634e487b7160e01b600052603260045260246000fd5b602090810291909101015261047181611535565b90506103dc565b509392505050565b816001600160a01b03166104926106e1565b6001600160a01b031614156104b95760405162461bcd60e51b81526004016101bc90611362565b80600160006104c66106e1565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561050a6106e1565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516105429190611133565b60405180910390a35050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6105846106e1565b6001600160a01b0316856001600160a01b031614806105aa57506105aa856101746106e1565b6105c65760405162461bcd60e51b81526004016101bc90611238565b61035985858585856108b7565b60035481565b6001600160e01b031981166301ffc9a760e01b14919050565b6001600160a01b0384166106185760405162461bcd60e51b81526004016101bc9061143c565b60006106226106e1565b905061064381600087610634886109eb565b61063d886109eb565b876108af565b6000848152602081815260408083206001600160a01b0389168452909152812080548592906106739084906114e2565b92505081905550846001600160a01b031660006001600160a01b0316826001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6287876040516106ca929190611486565b60405180910390a461035981600087878787610a44565b335b90565b81518351146107075760405162461bcd60e51b81526004016101bc906113f4565b6001600160a01b03841661072d5760405162461bcd60e51b81526004016101bc90611281565b60006107376106e1565b90506107478187878787876108af565b60005b845181101561084957600085828151811061077557634e487b7160e01b600052603260045260246000fd5b6020026020010151905060008583815181106107a157634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156107f15760405162461bcd60e51b81526004016101bc90611318565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061082e9084906114e2565b925050819055505050508061084290611535565b905061074a565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610899929190611105565b60405180910390a46108af818787878787610b52565b505050505050565b6001600160a01b0384166108dd5760405162461bcd60e51b81526004016101bc90611281565b60006108e76106e1565b90506108f8818787610634886109eb565b6000848152602081815260408083206001600160a01b038a168452909152902054838110156109395760405162461bcd60e51b81526004016101bc90611318565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906109769084906114e2565b92505081905550856001600160a01b0316876001600160a01b0316836001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6288886040516109cc929190611486565b60405180910390a46109e2828888888888610a44565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610a3357634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b610a56846001600160a01b0316610c23565b156108af5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610a8f90899089908890889088906004016110ad565b602060405180830381600087803b158015610aa957600080fd5b505af1925050508015610ad9575060408051601f3d908101601f19168201909252610ad691810190610f96565b60015b610b2257610ae5611582565b80610af05750610b0a565b8060405162461bcd60e51b81526004016101bc919061113e565b60405162461bcd60e51b81526004016101bc90611151565b6001600160e01b0319811663f23a6e6160e01b146109e25760405162461bcd60e51b81526004016101bc906111a5565b610b64846001600160a01b0316610c23565b156108af5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610b9d908990899088908890889060040161104f565b602060405180830381600087803b158015610bb757600080fd5b505af1925050508015610be7575060408051601f3d908101601f19168201909252610be491810190610f96565b60015b610bf357610ae5611582565b6001600160e01b0319811663bc197c8160e01b146109e25760405162461bcd60e51b81526004016101bc906111a5565b3b151590565b80356001600160a01b038116811461022e57600080fd5b600082601f830112610c50578081fd5b81356020610c65610c60836114be565b611494565b8281528181019085830183850287018401881015610c81578586fd5b855b85811015610c9f57813584529284019290840190600101610c83565b5090979650505050505050565b600082601f830112610cbc578081fd5b813567ffffffffffffffff811115610cd657610cd6611566565b610ce9601f8201601f1916602001611494565b818152846020838601011115610cfd578283fd5b816020850160208301379081016020019190915292915050565b60008060408385031215610d29578182fd5b610d3283610c29565b9150610d4060208401610c29565b90509250929050565b600080600080600060a08688031215610d60578081fd5b610d6986610c29565b9450610d7760208701610c29565b9350604086013567ffffffffffffffff80821115610d93578283fd5b610d9f89838a01610c40565b94506060880135915080821115610db4578283fd5b610dc089838a01610c40565b93506080880135915080821115610dd5578283fd5b50610de288828901610cac565b9150509295509295909350565b600080600080600060a08688031215610e06578081fd5b610e0f86610c29565b9450610e1d60208701610c29565b93506040860135925060608601359150608086013567ffffffffffffffff811115610e46578182fd5b610de288828901610cac565b60008060408385031215610e64578182fd5b610e6d83610c29565b915060208301358015158114610e81578182fd5b809150509250929050565b60008060408385031215610e9e578182fd5b610ea783610c29565b946020939093013593505050565b60008060408385031215610ec7578182fd5b823567ffffffffffffffff80821115610ede578384fd5b818501915085601f830112610ef1578384fd5b81356020610f01610c60836114be565b82815281810190858301838502870184018b1015610f1d578889fd5b8896505b84871015610f4657610f3281610c29565b835260019690960195918301918301610f21565b5096505086013592505080821115610f5c578283fd5b50610f6985828601610c40565b9150509250929050565b600060208284031215610f84578081fd5b8135610f8f81611627565b9392505050565b600060208284031215610fa7578081fd5b8151610f8f81611627565b600060208284031215610fc3578081fd5b5035919050565b6000815180845260208085019450808401835b83811015610ff957815187529582019590820190600101610fdd565b509495945050505050565b60008151808452815b818110156110295760208185018101518683018201520161100d565b8181111561103a5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a06040820181905260009061107b90830186610fca565b828103606084015261108d8186610fca565b905082810360808401526110a18185611004565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906110e790830184611004565b979650505050505050565b600060208252610f8f6020830184610fca565b6000604082526111186040830185610fca565b828103602084015261112a8185610fca565b95945050505050565b901515815260200190565b600060208252610f8f6020830184611004565b60208082526034908201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356040820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606082015260800190565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6020808252602b908201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60408201526a65726f206164647265737360a81b606082015260800190565b60208082526029908201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260408201526808185c1c1c9bdd995960ba1b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526032908201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206040820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526029908201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604082015268103337b91039b2b63360b91b606082015260800190565b60208082526029908201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604082015268040dad2e6dac2e8c6d60bb1b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b90815260200190565b918252602082015260400190565b60405181810167ffffffffffffffff811182821017156114b6576114b6611566565b604052919050565b600067ffffffffffffffff8211156114d8576114d8611566565b5060209081020190565b600082198211156114f5576114f5611550565b500190565b60028104600182168061150e57607f821691505b6020821081141561152f57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561154957611549611550565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60e01c90565b600060443d1015611592576106e3565b600481823e6308c379a06115a6825161157c565b146115b0576106e3565b6040513d600319016004823e80513d67ffffffffffffffff81602484011181841117156115e057505050506106e3565b828401925082519150808211156115fa57505050506106e3565b503d83016020828401011115611612575050506106e3565b601f01601f1916810160200160405291505090565b6001600160e01b03198116811461163d57600080fd5b5056fea26469706673582212201afd878d3b8e0a3256f93ce48285cdcdaca1fab3f60b81358d20a93436c7379e64736f6c63430008000033";
        String abi = "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"name\":\"addNewAirline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airlineCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]";

        String txEncode = null;
        String submitTransaction = null;
        
        System.out.println("===============================第一次部署合约开始==========================================");
        // 部署合约
        txEncode = EvmUtil.createEvmContract(HexUtil.fromHexString(code), "", "evm-erc1155", abi, privateKey);
        submitTransaction = client.submitTransaction(txEncode);
        String contractName = submitTransaction;
        System.out.println(submitTransaction);
        Thread.sleep(5000);
        
        // 合约名称
        String contractN = "user.evm." + contractName;
        // 合约地址的计算
        String execAddress = client.convertExectoAddr(contractN);
        
        // 调用合约
        txEncode = EvmUtil.callEvmContract("".getBytes(),"", 0, "addNewAirline(100)", contractName, privateKey);
        submitTransaction = client.submitTransaction(txEncode);
        Thread.sleep(1000);
        
        txEncode = EvmUtil.callEvmContract("".getBytes(),"", 0, "addNewAirline(500)", contractName, privateKey);
        submitTransaction = client.submitTransaction(txEncode);
        Thread.sleep(1000);
        
        txEncode = EvmUtil.callEvmContract("".getBytes(),"", 0, "addNewAirline(1000)", contractName, privateKey);
        submitTransaction = client.submitTransaction(txEncode);
        Thread.sleep(5000);
        
        // 查询
        JSONArray abiResult = client.queryEVMABIResult(execAddress, contractN, "balanceOfBatch([1CbEVT9RnM5oZhWMj4fxUrJX94VtRotzvs,1CbEVT9RnM5oZhWMj4fxUrJX94VtRotzvs,1CbEVT9RnM5oZhWMj4fxUrJX94VtRotzvs],[1,2,3])");
        System.out.println("用户名下三家航空公司积分信息：　" + abiResult);
        
        // 批量转账
        txEncode = EvmUtil.callEvmContract("".getBytes(),"", 0, "safeBatchTransferFrom(\"1CbEVT9RnM5oZhWMj4fxUrJX94VtRotzvs\",\"17qCrh4tRMQfFZK9qxNbAinSsfuL88g6ha\",[1,2,3],[10,9,8],\"\")", contractName, privateKey);
        submitTransaction = client.submitTransaction(txEncode);
        System.out.println(submitTransaction);
        Thread.sleep(5000);
        
        JSONArray abiResult1 = client.queryEVMABIResult(execAddress, contractN, "balanceOfBatch([1CbEVT9RnM5oZhWMj4fxUrJX94VtRotzvs,1CbEVT9RnM5oZhWMj4fxUrJX94VtRotzvs,1CbEVT9RnM5oZhWMj4fxUrJX94VtRotzvs],[1,2,3])");
        System.out.println("用户名下三家航空公司积分信息：　" + abiResult1);
        
        JSONArray abiResult2 = client.queryEVMABIResult(execAddress, contractN, "balanceOfBatch([17qCrh4tRMQfFZK9qxNbAinSsfuL88g6ha,17qCrh4tRMQfFZK9qxNbAinSsfuL88g6ha,17qCrh4tRMQfFZK9qxNbAinSsfuL88g6ha],[1,2,3])");
        System.out.println("用户名下三家航空公司积分信息：　" + abiResult2);
        
        System.out.println("===============================第一次部署合约结束==========================================");
                        
	 }
	 
	/**
	 * 3.5.4合约冻结或终止
	 * @throws Exception 
	 */
	 @Test
	 public void Case3_5_4() throws Exception {
		 
			QueryTransactionResult result = client.queryTransaction("0x03fd485369dd9ff37b4969bb166bc5ac8f6bb06ec536cb9222ec8f2e7856a4ad");
			System.out.println("执行结果码:" + result.getReceipt().getTy());	
			System.out.println("执行结果:" + result.getReceipt().getTyname());	
		 
	 }
	 
	
	/**
     * 转账交易
     * @param note
     * @param amount
     * @param to
     * @param privateKey
     * @param fromAddress
	 * @throws Exception 
     */
    private void transfer(String note, long amount, String to, String privateKey, String fromAddress) throws Exception {
    	
    	TransferBalanceRequest transferBalanceRequest = new TransferBalanceRequest();
    	// 转账说明
		transferBalanceRequest.setNote(note);
		// 转主积分的情况下，默认填""
		transferBalanceRequest.setCoinToken("");
		// 转账数量 ， 以下代表转1个积分
		transferBalanceRequest.setAmount(amount * 100000000L);
		// 转到的地址
		transferBalanceRequest.setTo(to);
		// 签名私私钥,对应的测试地址是：14KEKbYtKKQm4wMthSK9J4La4nAiidGozt
		transferBalanceRequest.setFromPrivateKey(privateKey);
		// 执行器名称，主链主积分固定为coins
		transferBalanceRequest.setExecer("coins");
		// 签名类型 (支持SM2, SECP256K1, ED25519)
		transferBalanceRequest.setSignType(SignType.SECP256K1);
		// 构造好，并本地签好名的交易
		String createTransferTx = TransactionUtil.transferBalanceMain(transferBalanceRequest);
		
		System.out.print("=========================" + note + " start ===============================\r\n");
		// 交易发往区块链
		String txHash = client.submitTransaction(createTransferTx);
		System.out.println(txHash);
		
		Thread.sleep(3000);


    }

}
