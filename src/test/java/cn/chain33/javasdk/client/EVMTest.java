package cn.chain33.javasdk.client;

import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;

import cn.chain33.javasdk.model.rpcresult.QueryTransactionResult;

public class EVMTest {
	
	// json/rpc connection
	RpcClient client = new RpcClient("localhost", 8801);
	
	private static String execer = "evm";
	
	// 创建EVM的actionName
	private static String actionNameCreate = "CreateCall";
	
	// solidity 编译好的code
	private static String createcode = "";
	
	// abi
	private static String abi = "[{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getMdInfoByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMdNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_creator\",\"type\":\"address\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_codeno\",\"type\":\"string\"},{\"name\":\"_batchno\",\"type\":\"string\"},{\"name\":\"_desc\",\"type\":\"string\"}],\"name\":\"addMdInfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_codeno\",\"type\":\"string\"}],\"name\":\"getMdIndexByCodeNo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_codeno\",\"type\":\"string\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_batchno\",\"type\":\"string\"},{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"updateMdInfoByCodeNo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_codeno\",\"type\":\"string\"}],\"name\":\"getMdInfoByCodeNo\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]";
	
	// 发起合约的地址和私钥
	private static String address = "1CbEVT9RnM5oZhWMj4fxUrJX94VtRotzvs";
	private static String secret = "3990969DF92A5914F7B71EEB9A4E58D6E255F32BF042FEA5318FC8B3D50EE6E8";
	
	public static void main(String[] args) throws Exception {
		EVMTest evmTest = new EVMTest();
		
		JSONObject payload = new JSONObject();
		
		// 创建EVM合约
		payload.put("code", createcode);
		payload.put("abi", abi);
		payload.put("note", "EVMCreate");
		payload.put("fee", 10000000);
		payload.put("isCreate", true);

		String unsignTx = evmTest.createTransaction(payload);
		String signTx = evmTest.signRawTx(address, secret, unsignTx, "1h", 1);
		String txhashCreate = evmTest.submitTransaction(signTx);
		evmTest.querytxWithoutContent(txhashCreate);
		
		payload = new JSONObject();
		// 调用EVM合约(addMdInfo)
		payload.put("name", "user.evm." + txhashCreate);
		payload.put("isCreate", false);
		payload.put("abi", "addMdInfo(\"1CbEVT9RnM5oZhWMj4fxUrJX94VtRotzvs\",\"name\",\"12000\",\"number001\",\"pihao002\",\"desc\")");
		
		
		// 获取合约对应的地址
		String contractAddress = evmTest.converAddress("user.evm." + txhashCreate);
		
		unsignTx = evmTest.createTransaction(payload);
		signTx = evmTest.signRawTx(address, secret, unsignTx, "1h", 1);
		String txhash = evmTest.submitTransaction(signTx);
		evmTest.querytxWithoutContent(txhash);
		
		payload = new JSONObject();
		JSONObject requestParam = new JSONObject();
		requestParam.put("execer", execer);
		requestParam.put("funcName", "Query");
		// 查询: getMdNumber
		payload.put("address", contractAddress);
		payload.put("input", "getMdNumber()");
		payload.put("caller", address);
		requestParam.put("payload", payload);

		JSONArray getMdNumberResulst = evmTest.queryEVMByABI(requestParam);
		System.out.println(getMdNumberResulst);
		
		payload = new JSONObject();
		requestParam = new JSONObject();
		requestParam.put("execer", execer);
		requestParam.put("funcName", "Query");
		// 查询: getMdIndexByCodeNo
		payload.put("address", contractAddress);
		payload.put("input", "getMdIndexByCodeNo(\"number001\")");
		payload.put("caller", address);
		requestParam.put("payload", payload);

		JSONArray getMdIndexByCodeNoResulst = evmTest.queryEVMByABI(requestParam);
		System.out.println(getMdIndexByCodeNoResulst);
	}
	
	public String createTransaction(JSONObject payload) throws Exception {
		String unsignTx = client.createTransaction(execer, actionNameCreate, payload);
		return unsignTx;
	}

	public String signRawTx(String addr, String key, String txhex, String expire, int index) {
		String signTx = client.signRawTx(addr, key, txhex, expire, index);
		return signTx;
	}

	public String submitTransaction(String data) {
		String sendResult = client.submitTransaction(data);
		return sendResult;
	}
	
	public JSONArray queryEVMByABI(JSONObject requestParam) throws Exception {
		JSONArray unsignTx = client.queryEVMByABI(requestParam);
		return unsignTx;
	}
	
	
	public void querytxWithoutContent(String txHash) throws InterruptedException {
		
		QueryTransactionResult queryTransaction = new QueryTransactionResult();
		// 打包区块可能会有一定延时，这边等待一会
		for (int i = 0; i < 50; i++) {
			Thread.sleep(1000);
			queryTransaction = client.queryTransaction(txHash);
			if (null == queryTransaction) {
				Thread.sleep(1000);
			} else {
				break;
			}
		}
		
		// 获得区块高度
		System.out.println("区块高度：" + queryTransaction.getHeight() + "区块时间：" + queryTransaction.getBlocktime()
				+ "区块hash:" + client.getBlockHash(queryTransaction.getHeight()) + "交易hash:" + txHash);
	}
	
	/**
	 * Get the contract address
	 */
	public String converAddress(String execerName) {
		String address = client.convertExectoAddr(execerName);
		return address;
	}

}
